{"version":3,"sources":["ImprovedNoise.js","SongManager.js","SoundcloudLoader.js","UIManager.js","main.js","webgl.js","controls/FlyControls.js","controls/OrbitControls.js","objects/Sphere.js","shaders/ParticleShader.js"],"names":[],"mappingsplDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpqjzqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["// http://mrl.nyu.edu/~perlin/noise/\n\nvar ImprovedNoise = function () {\n\n    var p = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,\n         23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,\n         174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,\n         133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,\n         89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,\n         202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,\n         248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,\n         178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,\n         14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,\n         93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n\n    for ( var i = 0; i < 256 ; i++ ) {\n\n        p[ 256 + i ] = p[ i ];\n\n    }\n\n    function fade( t ) {\n\n        return t * t * t * ( t * ( t * 6 - 15 ) + 10 );\n\n    }\n\n    function lerp( t, a, b ) {\n\n        return a + t * ( b - a );\n\n    }\n\n    function grad( hash, x, y, z ) {\n\n        var h = hash & 15;\n        var u = h < 8 ? x : y, v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n        return ( ( h & 1 ) == 0 ? u : -u ) + ( ( h & 2 ) == 0 ? v : -v );\n\n    }\n\n    return {\n\n        noise: function ( x, y, z ) {\n\n            var floorX = Math.floor( x ), floorY = Math.floor( y ), floorZ = Math.floor( z );\n\n            var X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;\n\n            x -= floorX;\n            y -= floorY;\n            z -= floorZ;\n\n            var xMinus1 = x -1, yMinus1 = y - 1, zMinus1 = z - 1;\n\n            var u = fade( x ), v = fade( y ), w = fade( z );\n\n            var A = p[ X ] + Y, AA = p[ A ] + Z, AB = p[ A + 1 ] + Z, B = p[ X + 1 ] + Y, BA = p[ B ] + Z, BB = p[ B + 1 ] + Z;\n\n            return lerp( w, lerp( v, lerp( u, grad( p[ AA ], x, y, z ),\n                               grad( p[ BA ], xMinus1, y, z ) ),\n                          lerp( u, grad( p[ AB ], x, yMinus1, z ),\n                               grad( p[ BB ], xMinus1, yMinus1, z ) ) ),\n                     lerp( v, lerp( u, grad( p[ AA + 1 ], x, y, zMinus1 ),\n                               grad( p[ BA + 1 ], xMinus1, y, z - 1 ) ),\n                          lerp( u, grad( p[ AB + 1 ], x, yMinus1, zMinus1 ),\n                               grad( p[ BB + 1 ], xMinus1, yMinus1, zMinus1 ) ) ) );\n\n        }\n    }\n}\n\nvar currentRandom = Math.random;\n\n// Pseudo-random generator\nfunction Marsaglia(i1, i2) {\n  // from http://www.math.uni-bielefeld.de/~sillke/ALGORITHMS/random/marsaglia-c\n  var z=i1 || 362436069, w= i2 || 521288629;\n  var nextInt = function() {\n    z=(36969*(z&65535)+(z>>>16)) & 0xFFFFFFFF;\n    w=(18000*(w&65535)+(w>>>16)) & 0xFFFFFFFF;\n    return (((z&0xFFFF)<<16) | (w&0xFFFF)) & 0xFFFFFFFF;\n  };\n \n  this.nextDouble = function() {\n    var i = nextInt() / 4294967296;\n    return i < 0 ? 1 + i : i;\n  };\n  this.nextInt = nextInt;\n}\nMarsaglia.createRandomized = function() {\n  var now = new Date();\n  return new Marsaglia((now / 60000) & 0xFFFFFFFF, now & 0xFFFFFFFF);\n};      \n\n// Noise functions and helpers\nfunction PerlinNoise(seed) {\n  var rnd = seed !== undefined ? new Marsaglia(seed) : Marsaglia.createRandomized();\n  var i, j;\n  // http://www.noisemachine.com/talk1/17b.html\n  // http://mrl.nyu.edu/~perlin/noise/\n  // generate permutation\n  var p = new Array(512); \n  for(i=0;i<256;++i) { p[i] = i; }\n  for(i=0;i<256;++i) { var t = p[j = rnd.nextInt() & 0xFF]; p[j] = p[i]; p[i] = t; }\n  // copy to avoid taking mod in p[0];\n  for(i=0;i<256;++i) { p[i + 256] = p[i]; } \n  \n  function grad3d(i,x,y,z) {        \n    var h = i & 15; // convert into 12 gradient directions\n    var u = h<8 ? x : y,                 \n        v = h<4 ? y : h===12||h===14 ? x : z;\n    return ((h&1) === 0 ? u : -u) + ((h&2) === 0 ? v : -v);\n  }\n\n  function grad2d(i,x,y) { \n    var v = (i & 1) === 0 ? x : y;\n    return (i&2) === 0 ? -v : v;\n  }\n  \n  function grad1d(i,x) { \n    return (i&1) === 0 ? -x : x;\n  }\n  \n  function lerp(t,a,b) { return a + t * (b - a); }\n    \n  this.noise3d = function(x, y, z) {\n    var X = Math.floor(x)&255, Y = Math.floor(y)&255, Z = Math.floor(z)&255;\n    x -= Math.floor(x); y -= Math.floor(y); z -= Math.floor(z);\n    var fx = (3-2*x)*x*x, fy = (3-2*y)*y*y, fz = (3-2*z)*z*z;\n    var p0 = p[X]+Y, p00 = p[p0] + Z, p01 = p[p0 + 1] + Z, p1  = p[X + 1] + Y, p10 = p[p1] + Z, p11 = p[p1 + 1] + Z;\n    return lerp(fz, \n      lerp(fy, lerp(fx, grad3d(p[p00], x, y, z), grad3d(p[p10], x-1, y, z)),\n               lerp(fx, grad3d(p[p01], x, y-1, z), grad3d(p[p11], x-1, y-1,z))),\n      lerp(fy, lerp(fx, grad3d(p[p00 + 1], x, y, z-1), grad3d(p[p10 + 1], x-1, y, z-1)),\n               lerp(fx, grad3d(p[p01 + 1], x, y-1, z-1), grad3d(p[p11 + 1], x-1, y-1,z-1))));\n  };\n  \n  this.noise2d = function(x, y) {\n    var X = Math.floor(x)&255, Y = Math.floor(y)&255;\n    x -= Math.floor(x); y -= Math.floor(y);\n    var fx = (3-2*x)*x*x, fy = (3-2*y)*y*y;\n    var p0 = p[X]+Y, p1  = p[X + 1] + Y;\n    return lerp(fy, \n      lerp(fx, grad2d(p[p0], x, y), grad2d(p[p1], x-1, y)),\n      lerp(fx, grad2d(p[p0 + 1], x, y-1), grad2d(p[p1 + 1], x-1, y-1)));\n  };\n\n  this.noise1d = function(x) {\n    var X = Math.floor(x)&255;\n    x -= Math.floor(x);\n    var fx = (3-2*x)*x*x;\n    return lerp(fx, grad1d(p[X], x), grad1d(p[X+1], x-1));\n  };\n}\n\n//  these are lifted from Processing.js\n// processing defaults\nvar noiseProfile = { generator: undefined, octaves: 4, fallout: 0.5, seed: undefined};\n\nfunction noise(x, y, z) {\n  if(noiseProfile.generator === undefined) {\n    // caching\n    noiseProfile.generator = new PerlinNoise(noiseProfile.seed);\n  }\n  var generator = noiseProfile.generator;\n  var effect = 1, k = 1, sum = 0;\n  for(var i=0; i<noiseProfile.octaves; ++i) {\n    effect *= noiseProfile.fallout;        \n    switch (arguments.length) {\n    case 1:\n      sum += effect * (1 + generator.noise1d(k*x))/2; break;\n    case 2:\n      sum += effect * (1 + generator.noise2d(k*x, k*y))/2; break;\n    case 3:\n      sum += effect * (1 + generator.noise3d(k*x, k*y, k*z))/2; break;\n    }\n    k *= 2;\n  }\n  return sum;\n};","'use strict';\n\nvar SongManager = (function () {\n\n  var BEAT_MIN = 0.15; //a volume less than this is no beat\n  var beatTime = 0;\n  var beatHoldTime = 40;\n  var beatDecayRate = 0.97;\n\n  function SongManager(ui) {\n    // body...\n    var AudioContext = window.AudioContext || window.webkitAudioContext;\n    this.context = new AudioContext();\n    this.allValues = [];\n    this.beatCutOff = 0;\n    this.audioNodeSettedUp = false;\n    this.UI = ui;\n\n  }\n\n  SongManager.prototype.load = function (fun) {  \n    this.audio = window.audio = document.getElementById('player');  \n\n    window.songman = this;\n\n    console.log(\"loading...\", window.audio);\n\n\n\n    //window.audio.addEventListener('canplaythrough', function () {\n    if (!window.songman.sourceNode) {\n      window.songman.setupAudioNodes();\n      fun.call();\n    }\n\n    //}, false);\n\n  };\n\n  SongManager.prototype.loadAndUpdate = function (trackUrl) {\n    var $$ = this;\n    this.loader.loadStream(trackUrl,\n      function () {\n        //uiUpdater.clearInfoPanel();\n        //console.log($$.source);\n        $$.playStream($$.loader.streamUrl());\n        $$.UI.update($$.loader);\n        setTimeout($$.UI.toggleControlPanel, 3000); // auto-hide the control panel\n      },\n      function () {\n        //$$.UI.displayMessage(\"Error\", loader.errorMessage);\n      });\n  };\n\n\n  SongManager.prototype.render = function () {  \n    // update data in frequencyData\n         \n    //this.analyser.getByteFrequencyData(this.frequencyData);     \n    // render frame based on values in frequencyData\n    //console.log(this.frequencyData);\n  }\n\n\n  SongManager.prototype.setupAudioNodes = function () {\n\n    this.volume = 0;\n    this.streamData = new Uint8Array(128);\n\n    this.analyser = (this.analyser || this.context.createAnalyser());\n\n    // we could configure the analyser: e.g. analyser.fftSize (for further infos read the spec)\n    // frequencyBinCount tells you how many values you'll receive from the analyser\n\n    this.analyser.smoothingTimeConstant = 0.8;\n    //this.analyser.fftSize = 512;\n    this.analyser.fftSize = 1024;\n    //songman.analyser.fftSize = 256;\n\n    this.loader = new SoundcloudLoader(this.audio, this.UI);\n    //this.audiosource = new SoundCloudAudioSource(this.audio, this);\n\n    console.log(this.loader);\n\n    //setInterval(this.sampleAudioStream, 20);\n\n    //if (!this.sourceNode)\n    this.sourceNode = this.context.createMediaElementSource(window.audio);\n    this.sourceNode.connect(this.analyser);\n    this.sourceNode.connect(this.context.destination);\n\n    this.frequencyData = new Uint8Array(this.analyser.frequencyBinCount);   \n\n    console.log(\"loaded !\");\n    this.audioNodeSettedUp = true;\n    //window.audio.play();\n\n  }\n\n\n  SongManager.prototype.playStream = function (streamUrl) {\n    var $$ = this;\n    // get the input stream from the audio element\n    window.audio.addEventListener('ended', function () {\n      $$.loader.directStream('coasting');\n    });\n    window.audio.setAttribute('src', streamUrl);\n    window.audio.play();\n  }\n\n\n  SongManager.prototype.sampleAudioStream = function () {\n    this.analyser.getByteFrequencyData(this.streamData);\n    // calculate an overall volume value\n    var total = 0;\n    for (var i = 0; i < 80; i++) { // get the volume from the first 80 bins, else it gets too loud with treble\n      total += this.streamData[i];\n    }\n    this.volume = total;\n  };\n\n\n  SongManager.prototype.getSoundDataAverage = function (array) {\n    this.analyser.smoothingTimeConstant = 0.1;\n    this.analyser.getByteFrequencyData(array);\n    var average = 0;\n    for (var i = 0, lgth = array.length; i < lgth; ++i) {\n      average += array[i];\n    }\n\n    var fixedAverage = (average / lgth) == 0 ? 1 : (average / lgth);\n\n    return fixedAverage;\n  };\n\n\n\n  /**\n   * Calculates the average amplitude of each frequency\n   * @param array - array containing the amplitude of each frequency\n   * @returns the average amplitude of all frequency\n   */\n  SongManager.prototype.getAverageVolume = function (array) {\n    var values = 0;\n    var average;\n    var length = array.length;\n    //console.log(length);\n    // sum the frequency amplitudes\n    for (var i = 0; i < length; i++) {\n      values += array[i];\n    }\n    // then mean it\n    average = values / length;\n    return average;\n  }\n\n\n\n  /**\n   * Calculate the intensity from the average of the 100 last sound values\n   */\n  SongManager.prototype.getSoundDataIntensity = function (arr) {\n    var fixedAverage = this.getSoundDataAverage(arr);\n    var i = 0;\n    var totalSongAverage = 0;\n\n\n    if (arr.length > 20) {\n      this.allValues.shift();\n      this.allValues.push(fixedAverage);\n    } else {\n      this.allValues.push(fixedAverage);\n    }\n\n    for (i = 0; i < this.allValues.length; i++) {\n      totalSongAverage += this.allValues[i];\n    };\n\n    return (totalSongAverage / this.allValues.length).toFixed();\n  };\n\n\n  SongManager.prototype.getMicInput = function () {\n\n    stopSound();\n    //x-browser\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n    if (navigator.getUserMedia) {\n\n      navigator.getUserMedia(\n\n        {\n          audio: true\n        },\n\n        function (stream) {\n\n          //reinit here or get an echo on the mic\n          this.sourceNode = audioContext.createBufferSource();\n          this.analyser = audioContext.createAnalyser();\n          this.analyser.fftSize = 1024;\n          this.analyser.smoothingTimeConstant = 0.3;\n\n          this.microphone = audioContext.createMediaStreamSource(stream);\n          this.microphone.connect(this.analyser);\n          isPlayingAudio = true;\n          // console.log(\"here\");\n        },\n\n        // errorCallback\n        function (err) {\n          alert(\"The following error occured: \" + err);\n        }\n      );\n\n    } else {\n      alert(\"Could not getUserMedia\");\n    }\n  }\n\n  SongManager.prototype.stopSound = function () {\n    //isPlayingAudio = false;\n    if (this.sourceNode) {\n      this.sourceNode.stop(0);\n      this.sourceNode.disconnect();\n    }\n  }\n\n\n  SongManager.prototype.doBeat = function (array, onBeat) {\n\n    var level = this.getSoundDataAverage(array);\n    // body...\n    //BEAT DETECTION\n    //console.log('beatMan', level, this.beatCutOff);\n    if (level > this.beatCutOff && level > BEAT_MIN) {\n\n      onBeat();\n      this.beatCutOff = level * 1.1;\n      beatTime = 0;\n    } else {\n      if (beatTime <= beatHoldTime) {\n        beatTime++;\n      } else {\n        this.beatCutOff *= beatDecayRate;\n        this.beatCutOff = Math.max(this.beatCutOff, BEAT_MIN);\n      }\n    }\n  }\n\n\n\n  SongManager.prototype.loadSong = function (url) {\n    var audio = this.audio;\n    if (audio) audio.remove();\n    if (this.sourceNode) this.sourceNode.disconnect();\n    //cancelAnimationFrame(audioAnimation);\n    audio = new Audio();\n    audio.src = url;\n    audio.addEventListener(\"canplay\", function (e) {\n      setupAudioNodes();\n    }, false);\n  }\n\n  return SongManager;\n\n})();","/**\n * Makes a request to the Soundcloud API and returns the JSON data.\n */\nvar SoundcloudLoader = function (player, UI) {\n    var self = this;\n    var client_id = \"15b0abc3b73c0a64fd45d2ef8fdbd06c\"; // to get an ID go to http://developers.soundcloud.com/\n    this.sound = {};\n    this.streamUrl = \"\";\n    this.errorMessage = \"\";\n    this.player = player;\n    this.UI = UI;\n\n    /**\n     * Loads the JSON stream data object from the URL of the track (as given in the location bar of the browser when browsing Soundcloud),\n     * and on success it calls the callback passed to it (for example, used to then send the stream_url to the audiosource object).\n     * @param track_url\n     * @param callback\n     */\n    this.loadStream = function (track_url, successCallback, errorCallback) {\n        SC.initialize({\n            client_id: client_id\n        });\n        SC.get('/resolve', {\n            url: track_url\n        }, function (sound) {\n            if (sound.errors) {\n                self.errorMessage = \"\";\n                for (var i = 0; i < sound.errors.length; i++) {\n                    self.errorMessage += sound.errors[i].error_message + '<br>';\n                }\n                self.errorMessage += 'Make sure the URL has the correct format: https://soundcloud.com/user/title-of-the-track';\n                errorCallback();\n            } else {\n\n                if (sound.kind == \"playlist\") {\n                    self.sound = sound;\n                    self.streamPlaylistIndex = 0;\n                    self.streamUrl = function () {\n                        return sound.tracks[self.streamPlaylistIndex].stream_url + '?client_id=' + client_id;\n                    }\n                    successCallback();\n                } else {\n                    self.sound = sound;\n                    self.streamUrl = function () {\n                        return sound.stream_url + '?client_id=' + client_id;\n                    };\n                    successCallback();\n                }\n            }\n        });\n    };\n\n\n    this.directStream = function (direction) {\n        if (direction == 'toggle') {\n            if (this.player.paused) {\n                this.player.play();\n            } else {\n                this.player.pause();\n            }\n        } else if (this.sound.kind == \"playlist\") {\n            if (direction == 'coasting') {\n                this.streamPlaylistIndex++;\n            } else if (direction == 'forward') {\n                if (this.streamPlaylistIndex >= this.sound.track_count - 1) this.streamPlaylistIndex = 0;\n                else this.streamPlaylistIndex++;\n            } else {\n                if (this.streamPlaylistIndex <= 0) this.streamPlaylistIndex = this.sound.track_count - 1;\n                else this.streamPlaylistIndex--;\n            }\n            if (this.streamPlaylistIndex >= 0 && this.streamPlaylistIndex <= this.sound.track_count - 1) {\n                this.player.setAttribute('src', this.streamUrl());\n                this.UI.update(this);\n                this.player.play();\n            }\n        }\n    }\n\n\n};","/**\n * Class to update the UI when a new sound is loaded\n * @constructor\n */\nvar UIManager = function () {\n\tvar controlPanel = document.getElementById('controlPanel');\n\tvar trackInfoPanel = document.getElementById('trackInfoPanel');\n\tvar infoImage = document.getElementById('infoImage');\n\tvar infoArtist = document.getElementById('infoArtist');\n\tvar infoTrack = document.getElementById('infoTrack');\n\tvar messageBox = document.getElementById('messageBox');\n\n\tthis.clearInfoPanel = function () {\n\t\t// first clear the current contents\n\t\tinfoArtist.innerHTML = \"\";\n\t\tinfoTrack.innerHTML = \"\";\n\t\ttrackInfoPanel.className = 'hidden';\n\t};\n\tthis.update = function (loader) {\n\t\t// update the track and artist into in the controlPanel\n\t\tvar artistLink = document.createElement('a');\n\t\tartistLink.setAttribute('href', loader.sound.user.permalink_url);\n\t\tartistLink.innerHTML = loader.sound.user.username;\n\t\tvar trackLink = document.createElement('a');\n\t\ttrackLink.setAttribute('href', loader.sound.permalink_url);\n\n\t\tif (loader.sound.kind == \"playlist\") {\n\t\t\ttrackLink.innerHTML = \"<p>\" + loader.sound.tracks[loader.streamPlaylistIndex].title + \"</p>\" + \"<p>\" + loader.sound.title + \"</p>\";\n\t\t} else {\n\t\t\ttrackLink.innerHTML = loader.sound.title;\n\t\t}\n\n\t\tvar image = loader.sound.artwork_url ? loader.sound.artwork_url : loader.sound.user.avatar_url; // if no track artwork exists, use the user's avatar.\n\t\tinfoImage.setAttribute('src', image);\n\n\t\tinfoArtist.innerHTML = '';\n\t\tinfoArtist.appendChild(artistLink);\n\n\t\tinfoTrack.innerHTML = '';\n\t\tinfoTrack.appendChild(trackLink);\n\n\t\t// display the track info panel\n\t\ttrackInfoPanel.className = '';\n\n\t\t// add a hash to the URL so it can be shared or saved\n\t\tvar trackToken = loader.sound.permalink_url.substr(22);\n\t\twindow.location = '#' + trackToken;\n\t};\n\tthis.toggleControlPanel = function () {\n\t\tif (controlPanel.className.indexOf('hidden') === 0) {\n\t\t\tcontrolPanel.className = '';\n\t\t} else {\n\t\t\tcontrolPanel.className = 'hidden';\n\t\t}\n\t};\n\tthis.displayMessage = function (title, message) {\n\t\tmessageBox.innerHTML = ''; // reset the contents\n\n\t\tvar titleElement = document.createElement('h3');\n\t\ttitleElement.innerHTML = title;\n\n\t\tvar messageElement = document.createElement('p');\n\t\tmessageElement.innerHTML = message;\n\n\t\tvar closeButton = document.createElement('a');\n\t\tcloseButton.setAttribute('href', '#');\n\t\tcloseButton.innerHTML = 'close';\n\t\tcloseButton.addEventListener('click', function (e) {\n\t\t\te.preventDefault();\n\t\t\tmessageBox.className = 'hidden';\n\t\t});\n\n\t\tmessageBox.className = '';\n\t\t// stick them into the container div\n\t\tmessageBox.appendChild(titleElement);\n\t\tmessageBox.appendChild(messageElement);\n\t\tmessageBox.appendChild(closeButton);\n\t};\n};","var webgl, sm, gui, clock, ui;\n\nvar baseURI = \"https://soundcloud.com/bernardo-guerra/hiromi-uehara-dan-ando-no-para?in=glenn-sonna-hall/sets/nujasamples\";\n//https://soundcloud.com/hydeout-productions/luvsic-part6-remix \n\nfunction init() {\n\n\n\twebgl = new Webgl(window.innerWidth, window.innerHeight);\n\tui = new UIManager();\n\tui.toggleControlPanel();\n\n\t//gui = new dat.GUI();\n\t//gui.close();\n\n\t$(window).on('resize', resizeHandler);\n\n\tvar clock = new THREE.Clock();\n\n\tsm = new SongManager(ui);\n\tsm.load(function () {\n\t\tanimate();\n\t\tsm.loadAndUpdate(baseURI);\n\t});\n\n\tvar form = document.getElementById('form');\n\tform.addEventListener('submit', function (e) {\n\t\te.preventDefault();\n\t\tvar trackUrl = document.getElementById('input').value;\n\t\tsm.loadAndUpdate(trackUrl);\n\t});\n}\n\nfunction resizeHandler() {\n\twebgl.resize(window.innerWidth, window.innerHeight);\n}\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\twebgl.render(sm);\n}\n\nfunction onDocumentMouseDown(event) {\n\twebgl.onDocumentMouseDown(event)\n}\n\n$(document).ready(init);\n$('.three').mousedown(onDocumentMouseDown);\n$('#controlPanel').hover(function () {\n\tui.toggleControlPanel();\n});","var Webgl = (function () {\n    // parameters\n    var SEPARATION = 25;\n    var AMOUNTX = 50;\n    var AMOUNTY = 50;\n    var INITIAL_FACTOR = 1.0;\n    var WAVE_HEIGHT = 200;\n    var WAVE_SPEED = 0.2;\n    var ROTATION_SPEED = 0.1;\n    var DAMP_SPEED = 0.005;\n    var CAMERA_SPEED = 0.05;\n\n    var CAMERA_SPEED = 0.05;\n    var CAMERA_INITIAL_X = -600;\n    var CAMERA_INITIAL_Y = 1500;\n    var CAMERA_INITIAL_Z = 3703;\n\n\n\n    var LINES_HEIGHT = 10;\n\n    var rotation = 0;\n    var mouseX = -300;\n    var mouseY = -300;\n\n\n\n    var attributes = {\n\n        size: {\n            type: 'f',\n            value: []\n        },\n\n        customColor: {\n            type: 'c',\n            value: []\n        }\n    };\n\n    var uniforms = {\n\n        amplitude: {\n            type: \"f\",\n            value: 1.0\n        },\n        color: {\n            type: \"c\",\n            value: new THREE.Color(0xffffff)\n        },\n        texture: {\n            type: \"t\",\n            value: THREE.ImageUtils.loadTexture(\"./src/js/img/particle.png\")\n        },\n    };\n\n    function Webgl(width, height) {\n        // Basic three.js setup\n\n        var worldWidth = 256,\n            worldDepth = 256,\n            worldHalfWidth = worldWidth / 2,\n            worldHalfDepth = worldDepth / 2;\n\n        this.canJumpTime = 0;\n        this.bigTime = false;\n        this.calming = false;\n\n        this.factor = INITIAL_FACTOR;\n        this.objects = [];\n        this.particles = [];\n        this.points = [];\n        this.scene = new THREE.Scene();\n        //this.scene.fog = new THREE.FogExp2(0x2D2D2D, 0.0000675);\n        this.scene.fog = new THREE.FogExp2(0x000104, 0.0000675);\n        this.raycaster = new THREE.Raycaster();\n\n        this.camera = new THREE.PerspectiveCamera(50, width / height, 1, 100000);\n        this.camera.position.x = CAMERA_INITIAL_X;\n        this.camera.position.y = CAMERA_INITIAL_Y;\n        this.camera.position.z = CAMERA_INITIAL_Z;\n\n        this.camera.rotation = new THREE.Euler(-0.2998598927782072, -0.16611777185981183, -0.05108038192443367, 'XYZ');\n\n\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(width, height);\n        this.renderer.autoClear = false;\n        this.renderer.setClearColor(this.scene.fog.color, 1);\n        $('.three').append(this.renderer.domElement);\n\n        this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.damping = 0.2;\n\n        /*this.controls = new THREE.FlyControls(this.camera);\n\n        this.controls.movementSpeed = 1000;\n        this.controls.domElement = container;\n        this.controls.rollSpeed = Math.PI / 24;\n        this.controls.autoForward = false;\n        this.controls.dragToLook = false;*/\n\n        //Terrain\n        this.terrainMesh = this.buildTerrainMesh(256, 256);\n\n        //sky\n        //this.sky = new THREE.Sky();\n        //this.scene.add(this.sky.mesh);\n\n\n        //Intiate \n\n        //this.calculateInitialPoints();\n        //this.updatePoints();\n\n        // Directly add objects\n        this.scene.add(this.terrainMesh);\n        this.objects.push(this.terrainMesh);\n\n\n\n        //ProposPorcessing\n\n        this.composer = new THREE.EffectComposer(this.renderer);\n\n        var renderModel = new THREE.RenderPass(this.scene, this.camera);\n        this.composer.addPass(renderModel);\n\n        this.effectBloom = new THREE.BloomPass(1.3);\n        this.effectBloom.renderToScreen = true;\n\n        //this.effectBloom.blurX = 100;\n\n        //new THREE.Vector2(0.001953125, 0.0);\n\n\n        this.composer.addPass(this.effectBloom);\n\n\n        this.effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n        this.effectFXAA.uniforms['resolution'].value.set(1 / width, 1 / height);\n        //this.effectFXAA.renderToScreen = true;\n        this.composer.addPass(this.effectFXAA);\n\n        //Blurs\n        var blurValue = 1 / 16;\n        var tweenLength = 4;\n\n        this.hBlurPass = new THREE.ShaderPass(THREE.HorizontalBlurShader);\n        this.hBlurPass.uniforms['h'].value = 0;\n        this.composer.addPass(this.hBlurPass);\n\n        this.vBlurPass = new THREE.ShaderPass(THREE.VerticalBlurShader);\n        this.vBlurPass.uniforms['v'].value = 0;\n        this.composer.addPass(this.vBlurPass);\n\n        TweenMax.from(this.hBlurPass.uniforms.h, tweenLength, {\n            value: blurValue\n        });\n        TweenMax.from(this.vBlurPass.uniforms.v, tweenLength, {\n            value: blurValue\n        });\n\n        //End Blurs\n\n        this.effectCopy = new THREE.ShaderPass(THREE.CopyShader);\n        this.effectCopy.renderToScreen = true;\n        this.composer.addPass(this.effectCopy);\n\n        //this.effectFilm = new THREE.FilmPass(0.5, 0.5, 1448, false);\n        //this.effectFilm.renderToScreen = true;\n        //this.composer.addPass(this.effectFilm);\n\n        /* this.effectFocus = new THREE.ShaderPass(THREE.FocusShader);\n        this.effectFocus.uniforms[\"screenWidth\"].value = width;\n        this.effectFocus.uniforms[\"screenHeight\"].value = height;\n        this.effectFocus.renderToScreen = true;\n        this.composer.addPass(this.effectFocus);*/\n\n    }\n\n\n\n    Webgl.prototype.buildTerrainMesh = function (worldWidth, worldDepth) {\n        var geometry = new THREE.PlaneBufferGeometry(50000, 50000, worldWidth - 1, worldDepth - 1);\n        geometry.applyMatrix(new THREE.Matrix4().makeRotationX(Math.PI / 4));\n\n\n\n        var vertices = geometry.attributes.position.array;\n\n        var data = this.generateHeight(256, 256);\n        var basePos = new Float32Array(vertices.length);\n\n\n        for (var i = 0, j = 0, l = vertices.length; i < l; i++, j += 3) {\n\n            vertices[j + 1] = data[i] * 10;\n            basePos[j + 0] = vertices[j + 0];\n            basePos[j + 1] = vertices[j + 1];\n            basePos[j + 2] = vertices[j + 2];\n        }\n\n        geometry.addAttribute('basePos', new THREE.BufferAttribute(basePos, 1));\n\n        //geometry.addAttribute('pushed', new THREE.BufferAttribute(values_pushed, 1));\n\n        this.drawParticles(geometry);\n\n        var material = new THREE.MeshBasicMaterial({\n            color: 0x448844,\n            shading: THREE.FlatShading,\n            wireframe: false,\n            wireframeLinewidth: 2,\n            transparent: true\n        });\n\n\n        var mesh = new THREE.Mesh(geometry, material);\n        //mesh.visible = false;\n        return mesh;\n\n    }\n\n    Webgl.prototype.drawParticles = function (geometry) {\n        this.geometry = geometry;\n        this.lineAvgGeometry = new THREE.Geometry();\n        this.lgeometry = new THREE.Geometry();\n        this.lBassGeometry = new THREE.Geometry();\n\n        var add = true,\n            colors = [],\n            particle, material = new THREE.ShaderMaterial({\n\n                uniforms: uniforms,\n                attributes: attributes,\n                vertexShader: document.getElementById('vertexshader').textContent,\n                fragmentShader: document.getElementById('fragmentshader').textContent,\n                transparent: true,\n                side: THREE.DoubleSide,\n                blending: THREE.AdditiveBlending,\n                opacity: 0.7,\n                // vertexColors: THREE.VertexColors,\n            }),\n            vertices = this.geometry.attributes.position.array,\n            p = [3.5, 0xffffff, 0.5, 7],\n            lmaterial = new THREE.LineBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                linewidth: p[3],\n                vertexColors: THREE.VertexColors\n            }),\n            lAvgMaterial = new THREE.LineBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                linewidth: 10,\n                vertexColors: THREE.VertexColors\n            }),\n            lBassMaterial = new THREE.LineBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                linewidth: 20,\n                vertexColors: THREE.VertexColors\n            });;\n\n\n        var direction = new Float32Array(vertices.length);\n        var positions = new Float32Array(vertices.length * 3);\n        var values_color = new Float32Array(vertices.length * 3);\n        var values_size = new Float32Array(vertices.length);\n        var baseSize = new Float32Array(vertices.length);\n        //var basePos= new Float32Array(vertices.length);\n\n        var mover = new Float32Array(vertices.length);\n        var scaler = new Float32Array(vertices.length);\n        var liner = new Float32Array(vertices.length);\n\n        //Freq data\n        var frequency = new Float32Array(vertices.length);\n        var color = new THREE.Color(0xffaa00);\n\n        var linePositions = new Float32Array(vertices.length * 6);\n        var linesColors = [];\n        var linesAvgColors = [];\n        var linesBassColors = [];\n\n        for (var v = 0; v < vertices.length; v++) {\n\n            //Particle type definition\n            var isMover = Math.random() >= 0.50;\n            var isLiner = Math.random() >= 0.99;\n\n\n            liner[v] = isLiner;\n\n            if (!isLiner) {\n                mover[v] = isMover;\n                scaler[v] = !isMover;\n            }\n\n            //PArticle size deifnition\n            var size = Math.floor(Math.random() * 100) + 15;\n            values_size[v] = size;\n            baseSize[v] = size;\n\n\n            //Particle Color definition\n            values_color[v * 3 + 0] = color.r;\n            values_color[v * 3 + 1] = color.g;\n            values_color[v * 3 + 2] = color.b;\n\n            if (vertices[v] < 0)\n                color.setHSL(0.5 + 0.1 * (v / vertices.length), 0.7, 0.5);\n            else\n                color.setHSL(0.0 + 0.1 * (v / vertices.length), 0.9, 0.5);\n\n            //Particles associated lines\n            if (isLiner) {\n                var isBass = Math.random() >= 0.70;\n                var isAvg = Math.random() >= 0.40;\n\n\n                var lgeometry = this.lBassGeometry;\n                if (isAvg) {\n                    if (isBass) {\n                        var lbColor = new THREE.Color(0xE8590C);\n\n                        if (v % 2 != 1)\n                            lbColor.setHSL(0.1 + 0.1 * (v / vertices.length), 0.7, 0.5);\n                        linesBassColors.push(lbColor);\n\n                    } else {\n                        lgeometry = this.lineAvgGeometry\n                        var lacolor = new THREE.Color(0x440DFF);\n\n                        if (v % 2 != 1)\n                            lacolor.setHSL(0.1 + 0.1 * (v / vertices.length), 0.7, 0.5);\n\n                        linesAvgColors.push(lacolor);\n                    }\n                } else {\n                    lgeometry = this.lgeometry\n                    var lcolor = new THREE.Color(0xffffff);\n\n                    if (v % 2 != 1)\n                        lcolor.setHSL(0.5 + 0.1 * (v / vertices.length), 0.7, 0.5);\n                    else\n                        lcolor.setHSL(0.0 + 0.1 * (v / vertices.length), 0.9, 0.5);\n\n                    linesColors.push(lcolor);\n                }\n\n                var vertex1 = new THREE.Vector3();\n                vertex1.x = vertices[v * 3 + 0];\n                vertex1.y = vertices[v * 3 + 1];\n                vertex1.z = vertices[v * 3 + 2];\n\n\n                var vertex2 = vertex1.clone();\n                vertex2.y += LINES_HEIGHT;\n                vertex2.baseY = vertices[v * 3 + 1] + LINES_HEIGHT;\n\n                lgeometry.vertices.push(vertex1);\n                lgeometry.vertices.push(vertex2);\n            }\n        }\n\n        this.lBassGeometry.colors = linesBassColors;\n        this.lineAvgGeometry.colors = linesAvgColors;\n        this.lgeometry.colors = linesColors;\n\n        //this.geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n        this.geometry.addAttribute('customColor', new THREE.BufferAttribute(values_color, 3));\n        this.geometry.addAttribute('size', new THREE.BufferAttribute(values_size, 1));\n        this.geometry.addAttribute('baseSize', new THREE.BufferAttribute(baseSize, 1));\n        this.geometry.addAttribute('direction', new THREE.BufferAttribute(direction, 1));\n\n        //Add types\n        this.geometry.addAttribute('liner', new THREE.BufferAttribute(liner, 1));\n        this.geometry.addAttribute('mover', new THREE.BufferAttribute(mover, 1));\n        this.geometry.addAttribute('scaler', new THREE.BufferAttribute(scaler, 1));\n        this.geometry.addAttribute('frequency', new THREE.BufferAttribute(frequency, 1));\n\n        this.line = new THREE.Line(this.lgeometry, lmaterial, THREE.LinePieces);\n        this.lineAvg = new THREE.Line(this.lineAvgGeometry, lAvgMaterial, THREE.LinePieces);\n        this.lineBass = new THREE.Line(this.lBassGeometry, lBassMaterial, THREE.LinePieces);\n        //this.line.scale.x = this.line.scale.y = this.line.scale.z = p[0];\n        //this.line.originalScale = p[0];\n        this.scene.add(this.line);\n        this.scene.add(this.lineAvg);\n        this.scene.add(this.lineBass);\n\n\n\n        console.log(this.geometry);\n        var pointcloud = new THREE.PointCloud(this.geometry, material);\n        pointcloud.dynamic = true;\n\n        this.scene.add(pointcloud);\n\n    }\n\n\n    Webgl.prototype.generateHeight = function (width, height) {\n\n        var size = width * height,\n            data = new Uint8Array(size),\n            perlin = new ImprovedNoise(),\n            quality = 1,\n            z = Math.random() * 100;\n\n        for (var j = 0; j < 4; j++) {\n\n            for (var i = 0; i < size; i++) {\n\n                var x = i % width,\n                    y = ~~ (i / width);\n                data[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\n\n            }\n\n            quality *= 5;\n\n        }\n\n        return data;\n    }\n\n    Webgl.prototype.onDocumentMouseDown = function (event) {\n\n        event.preventDefault();\n\n        var vector = new THREE.Vector3();\n        vector.set((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1, 0.5);\n        vector.unproject(this.camera);\n\n        this.raycaster.ray.set(this.camera.position, vector.sub(this.camera.position).normalize());\n\n        var intersects = this.raycaster.intersectObjects(this.objects);\n\n        this.actor = INITIAL_FACTOR;\n        if (intersects.length > 0) {\n\n            //intersects[0].object.material.color.setHex(Math.random() * 0xffffff);\n\n            //var particle = new THREE.Sprite(particleMaterial);\n            //particle.position.copy(intersects[0].point);\n            //particle.scale.x = particle.scale.y = 16;\n            //this.scene.add(particle);\n\n            //console.log(intersects[0].point);\n        }\n    }\n\n\n    Webgl.prototype.calculateNextParameters = function () {\n        rotation += ROTATION_SPEED;\n        if (this.factor > 0) {\n            this.factor -= DAMP_SPEED;\n        }\n    }\n\n    Webgl.prototype.calculateInitialPoints = function () {\n        for (var i = 0; i < this.geometry.vertices.length; i++) {\n            var v = this.geometry.vertices[i];\n            var x = (v.x /\n                SEPARATION) * WAVE_SPEED;\n            var y = (v.y / SEPARATION) * WAVE_SPEED;\n            this.points[i] = WAVE_HEIGHT * (Math.cos(x * x + y * y) / Math.sqrt(x * x + y * y + 0.25));\n        }\n    }\n\n    Webgl.prototype.render = function (songman) {\n\n\n\n        var time = Date.now() * 0.005;\n        this.songdata = new Uint8Array(songman.analyser.frequencyBinCount);\n        songman.analyser.getByteFrequencyData(this.songdata);\n\n        this.updatePoints(time, songman);\n        this.upDateLines(time, songman);\n        this.updateCamera(time, songman);\n        songman.render();\n\n        this.geometry.computeFaceNormals();\n        this.geometry.computeVertexNormals();\n\n        this.lBassGeometry.verticesNeedUpdate = true;\n        this.lineAvgGeometry.verticesNeedUpdate = true;\n        this.lgeometry.verticesNeedUpdate = true;\n\n        this.geometry.attributes.size.needsUpdate = true;\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.customColor.needsUpdate = true;\n\n        this.composer.render();\n        //this.renderer.render(this.scene, this.camera);\n        //console.log(\"intensity %s | volume : %s [ avg  : %s\", intensity, volume, avg);\n    };\n\n    Webgl.prototype.updateCamera = function (time, songman) {\n        var intensity = songman.getSoundDataIntensity(this.songdata);\n        this.camera.position.x = Math.cos(time * 0.01) * 20000;\n        this.camera.position.z = Math.sin(time * 0.01) * 20000;\n        this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n        if ((this.bigTime == true) && (this.camera.position.y <= CAMERA_INITIAL_Y + 100) && this.canJumpTime <= 2) {\n            TweenMax.from(this.camera.position, 5, {\n                y: CAMERA_INITIAL_Y + 5000\n            });\n\n        } else if (this.calming == true && this.camera.position.y > CAMERA_INITIAL_Y + 5000) {\n\n            /*TweenMax.from(this.camera.position, 10, {\n                y: CAMERA_INITIAL_Y\n            });*/\n        }\n    }\n\n    Webgl.prototype.updatePoints = function (time, songman) {\n\n        var size = this.geometry.attributes.size.array;\n        var vertice = this.geometry.attributes.position.array;\n        var colors = this.geometry.attributes.customColor;\n        var direction = this.geometry.attributes.direction.array;\n        var baseSize = this.geometry.attributes.baseSize.array;\n        var basePos = this.geometry.attributes.basePos.array;\n\n        var mover = this.geometry.attributes.mover.array;\n        var scaler = this.geometry.attributes.scaler.array;\n        var liner = this.geometry.attributes.liner.array;\n\n        var frequency = this.geometry.attributes.frequency.array;\n\n        var avg = songman.getSoundDataAverage(this.songdata);\n\n        var intensity = songman.getSoundDataIntensity(this.songdata);\n        var volume = songman.getAverageVolume(this.songdata);\n\n        var $$ = this;\n        songman.doBeat(this.songdata, function () {\n            $$.terrainMesh.material.color.setHex(Math.random() * 0xffffff);\n        });\n\n        this.bigTime = (intensity > 79);\n        if (this.bigTime) {\n            this.canJumpTime++\n        } else if (this.caJumpTime > 15) {\n            //this.calming = true;\n            this.bigTime = false;\n            this.canJumpTime = 0\n        }\n\n        for (var i = 0, j = 0, l = vertice.length; i < l; i++, j += 3) {\n\n            if (frequency[i] === 0) {\n                frequency[i] = Math.floor(Math.random() * this.songdata.length / 2);\n            }\n\n            //this.songdata[frequency[i]];\n            //this.songdata[i % this.songdata.length];\n\n            //___Particles jump\n            var avgDestValue = (basePos[j + 1] + avg) * 3;\n\n            if (scaler[i]) {\n                //var vertDestValue = baseSize[i] + (this.bigTime ? avg + (baseSize[i] / 2) : (avg / 1.99));\n                //size[i] += (vertDestValue - size[i]) * 0.6;\n                //size[i] = 14 + 13 * Math.sin(0.1 * i + time);\n            } else {\n\n\n                //this.caJumpTime = this.bigTime ? this.canJumpTime++ : this.caJumpTime > 15 ? 0;\n\n                //75 for more tolerance\n                var vertDestValue = basePos[j + 1] + (this.bigTime ? avg + (basePos[j + 1] / 2) : (avg / 1.5));\n                vertice[j + 1] += (vertDestValue - vertice[j + 1]) * 0.6;\n\n                //move(vertice[j + 1], basePos[j + 1], direction[i]);\n            }\n        }\n    }\n\n    //___Lines jump\n    Webgl.prototype.upDateLines = function (time, songman) {\n\n        var avg = songman.getSoundDataAverage(this.songdata);\n        var intensity = songman.getSoundDataIntensity(this.songdata);\n        var volume = songman.getAverageVolume(this.songdata);\n\n        var lines = this.lgeometry.vertices;\n        var linesAvg = this.lineAvgGeometry.vertices;\n        var linesBass = this.lBassGeometry.vertices;\n\n        //intensity > 80 && console.log(this.songdata);\n\n        for (var i = 0; i < lines.length; i += 2) {\n\n            //pick a random indice in array could be : (i % this.songdata.length);\n            if (!lines[i + 1].hasOwnProperty('note'))\n                lines[i + 1].note = Math.floor(Math.random() * this.songdata.length / 2);\n\n            var songD = this.songdata[lines[i + 1].note];\n            if (lines[i + 1]) {\n                var value = lines[i + 1].baseY + (LINES_HEIGHT + (songD * 15));\n                lines[i + 1].y += (value - lines[i + 1].y) * 0.6;\n            }\n        };\n\n        for (var i = 0; i < linesAvg.length; i += 2) {\n\n            var multiplier = intensity > 80 ? intensity : 1;\n\n            var songD = this.songdata[i % this.songdata.length];\n            if (linesAvg[i + 1]) {\n                var value = linesAvg[i + 1].baseY + (((LINES_HEIGHT * 1.5) + (avg * 30)) * (avg / avg));\n                linesAvg[i + 1].y += (value - linesAvg[i + 1].y) * 0.6;\n            }\n        };\n\n        //TODO : indice attribute value to line\n        //Bass\n        for (var i = 0; i < linesBass.length; i += 2) {\n\n            var songD = this.songdata[Math.floor(Math.random() * 5) + 1];\n            if (linesBass[i + 1]) {\n                var value = linesBass[i + 1].baseY + (1 * songD);\n                linesBass[i + 1].y += (value - linesBass[i + 1].y) * 0.6;\n            }\n        };\n    }\n\n    //this.move(vertice[j + 1], basePos[j + 1], direction[i]);\n    Webgl.prototype.move = function (vertice, base, direction) {\n        if (vertice == base) {\n            direction = 1;\n        } else if (vertice == base + 30) {\n            direction = -1;\n        }\n        vertice = vertice + direction;\n\n\n\n        if (vertice[j + 1] == basePos[j + 1]) {\n            direction[i] = 1;\n        } else if (vertice[j + 1] == basePos[j + 1] + 30) {\n            direction[i] = -1;\n        }\n        vertice[j + 1] = vertice[j + 1] + direction[i];\n    };\n\n    Webgl.prototype.scale = function (width, height) {\n        //vertice[j + 1] = basePos[j + 1] * Math.sin(j / 5 + (time + j) / 7);\n        //size[i] = 14 + 13 * Math.sin(0.1 * i + time);\n        if (size[i] <= 1) {\n            direction[i] = 1;\n        } else if (size[i] == baseSize[i]) {\n            direction[i] = -1;\n        }\n        size[i] += direction[i];\n    };\n\n\n    Webgl.prototype.resize = function (width, height) {\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(width, height);\n        this.composer.reset();\n\n        //this.controls.handleResize();\n    };\n\n\n    return Webgl;\n\n})();","/**\n * @author James Baicoianu / http://www.baicoianu.com/\n */\n\nTHREE.FlyControls = function (object, domElement) {\n\n\tthis.object = object;\n\n\tthis.domElement = (domElement !== undefined) ? domElement : document;\n\tif (domElement) this.domElement.setAttribute('tabindex', -1);\n\n\t// API\n\n\tthis.movementSpeed = 1.0;\n\tthis.rollSpeed = 0.005;\n\n\tthis.dragToLook = false;\n\tthis.autoForward = false;\n\n\t// disable default target object behavior\n\n\t// internals\n\n\tthis.tmpQuaternion = new THREE.Quaternion();\n\n\tthis.mouseStatus = 0;\n\n\tthis.moveState = {\n\t\tup: 0,\n\t\tdown: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\tforward: 0,\n\t\tback: 0,\n\t\tpitchUp: 0,\n\t\tpitchDown: 0,\n\t\tyawLeft: 0,\n\t\tyawRight: 0,\n\t\trollLeft: 0,\n\t\trollRight: 0\n\t};\n\tthis.moveVector = new THREE.Vector3(0, 0, 0);\n\tthis.rotationVector = new THREE.Vector3(0, 0, 0);\n\n\tthis.handleEvent = function (event) {\n\n\t\tif (typeof this[event.type] == 'function') {\n\n\t\t\tthis[event.type](event);\n\n\t\t}\n\n\t};\n\n\tthis.keydown = function (event) {\n\n\t\tif (event.altKey) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//event.preventDefault();\n\n\t\tswitch (event.keyCode) {\n\n\t\tcase 16:\n\t\t\t/* shift */\n\t\t\tthis.movementSpeedMultiplier = .1;\n\t\t\tbreak;\n\n\t\tcase 87:\n\t\t\t/*W*/\n\t\t\tthis.moveState.forward = 1;\n\t\t\tbreak;\n\t\tcase 83:\n\t\t\t/*S*/\n\t\t\tthis.moveState.back = 1;\n\t\t\tbreak;\n\n\t\tcase 65:\n\t\t\t/*A*/\n\t\t\tthis.moveState.left = 1;\n\t\t\tbreak;\n\t\tcase 68:\n\t\t\t/*D*/\n\t\t\tthis.moveState.right = 1;\n\t\t\tbreak;\n\n\t\tcase 82:\n\t\t\t/*R*/\n\t\t\tthis.moveState.up = 1;\n\t\t\tbreak;\n\t\tcase 70:\n\t\t\t/*F*/\n\t\t\tthis.moveState.down = 1;\n\t\t\tbreak;\n\n\t\tcase 38:\n\t\t\t/*up*/\n\t\t\tthis.moveState.pitchUp = 1;\n\t\t\tbreak;\n\t\tcase 40:\n\t\t\t/*down*/\n\t\t\tthis.moveState.pitchDown = 1;\n\t\t\tbreak;\n\n\t\tcase 37:\n\t\t\t/*left*/\n\t\t\tthis.moveState.yawLeft = 1;\n\t\t\tbreak;\n\t\tcase 39:\n\t\t\t/*right*/\n\t\t\tthis.moveState.yawRight = 1;\n\t\t\tbreak;\n\n\t\tcase 81:\n\t\t\t/*Q*/\n\t\t\tthis.moveState.rollLeft = 1;\n\t\t\tbreak;\n\t\tcase 69:\n\t\t\t/*E*/\n\t\t\tthis.moveState.rollRight = 1;\n\t\t\tbreak;\n\n\t\t}\n\n\t\tthis.updateMovementVector();\n\t\tthis.updateRotationVector();\n\n\t};\n\n\tthis.keyup = function (event) {\n\n\t\tswitch (event.keyCode) {\n\n\t\tcase 16:\n\t\t\t/* shift */\n\t\t\tthis.movementSpeedMultiplier = 1;\n\t\t\tbreak;\n\n\t\tcase 87:\n\t\t\t/*W*/\n\t\t\tthis.moveState.forward = 0;\n\t\t\tbreak;\n\t\tcase 83:\n\t\t\t/*S*/\n\t\t\tthis.moveState.back = 0;\n\t\t\tbreak;\n\n\t\tcase 65:\n\t\t\t/*A*/\n\t\t\tthis.moveState.left = 0;\n\t\t\tbreak;\n\t\tcase 68:\n\t\t\t/*D*/\n\t\t\tthis.moveState.right = 0;\n\t\t\tbreak;\n\n\t\tcase 82:\n\t\t\t/*R*/\n\t\t\tthis.moveState.up = 0;\n\t\t\tbreak;\n\t\tcase 70:\n\t\t\t/*F*/\n\t\t\tthis.moveState.down = 0;\n\t\t\tbreak;\n\n\t\tcase 38:\n\t\t\t/*up*/\n\t\t\tthis.moveState.pitchUp = 0;\n\t\t\tbreak;\n\t\tcase 40:\n\t\t\t/*down*/\n\t\t\tthis.moveState.pitchDown = 0;\n\t\t\tbreak;\n\n\t\tcase 37:\n\t\t\t/*left*/\n\t\t\tthis.moveState.yawLeft = 0;\n\t\t\tbreak;\n\t\tcase 39:\n\t\t\t/*right*/\n\t\t\tthis.moveState.yawRight = 0;\n\t\t\tbreak;\n\n\t\tcase 81:\n\t\t\t/*Q*/\n\t\t\tthis.moveState.rollLeft = 0;\n\t\t\tbreak;\n\t\tcase 69:\n\t\t\t/*E*/\n\t\t\tthis.moveState.rollRight = 0;\n\t\t\tbreak;\n\n\t\t}\n\n\t\tthis.updateMovementVector();\n\t\tthis.updateRotationVector();\n\n\t};\n\n\tthis.mousedown = function (event) {\n\n\t\tif (this.domElement !== document) {\n\n\t\t\tthis.domElement.focus();\n\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (this.dragToLook) {\n\n\t\t\tthis.mouseStatus++;\n\n\t\t} else {\n\n\t\t\tswitch (event.button) {\n\n\t\t\tcase 0:\n\t\t\t\tthis.moveState.forward = 1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.moveState.back = 1;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tthis.updateMovementVector();\n\n\t\t}\n\n\t};\n\n\tthis.mousemove = function (event) {\n\n\t\tif (!this.dragToLook || this.mouseStatus > 0) {\n\n\t\t\tvar container = this.getContainerDimensions();\n\t\t\tvar halfWidth = container.size[0] / 2;\n\t\t\tvar halfHeight = container.size[1] / 2;\n\n\t\t\tthis.moveState.yawLeft = -((event.pageX - container.offset[0]) - halfWidth) / halfWidth;\n\t\t\tthis.moveState.pitchDown = ((event.pageY - container.offset[1]) - halfHeight) / halfHeight;\n\n\t\t\tthis.updateRotationVector();\n\n\t\t}\n\n\t};\n\n\tthis.mouseup = function (event) {\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (this.dragToLook) {\n\n\t\t\tthis.mouseStatus--;\n\n\t\t\tthis.moveState.yawLeft = this.moveState.pitchDown = 0;\n\n\t\t} else {\n\n\t\t\tswitch (event.button) {\n\n\t\t\tcase 0:\n\t\t\t\tthis.moveState.forward = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.moveState.back = 0;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tthis.updateMovementVector();\n\n\t\t}\n\n\t\tthis.updateRotationVector();\n\n\t};\n\n\tthis.update = function (delta) {\n\n\t\tvar moveMult = delta * this.movementSpeed;\n\t\tvar rotMult = delta * this.rollSpeed;\n\n\t\tthis.object.translateX(this.moveVector.x * moveMult);\n\t\tthis.object.translateY(this.moveVector.y * moveMult);\n\t\tthis.object.translateZ(this.moveVector.z * moveMult);\n\n\t\tthis.tmpQuaternion.set(this.rotationVector.x * rotMult, this.rotationVector.y * rotMult, this.rotationVector.z * rotMult, 1).normalize();\n\t\tthis.object.quaternion.multiply(this.tmpQuaternion);\n\n\t\t// expose the rotation vector for convenience\n\t\tthis.object.rotation.setFromQuaternion(this.object.quaternion, this.object.rotation.order);\n\n\n\t};\n\n\tthis.updateMovementVector = function () {\n\n\t\tvar forward = (this.moveState.forward || (this.autoForward && !this.moveState.back)) ? 1 : 0;\n\n\t\tthis.moveVector.x = (-this.moveState.left + this.moveState.right);\n\t\tthis.moveVector.y = (-this.moveState.down + this.moveState.up);\n\t\tthis.moveVector.z = (-forward + this.moveState.back);\n\n\t\t//console.log( 'move:', [ this.moveVector.x, this.moveVector.y, this.moveVector.z ] );\n\n\t};\n\n\tthis.updateRotationVector = function () {\n\n\t\tthis.rotationVector.x = (-this.moveState.pitchDown + this.moveState.pitchUp);\n\t\tthis.rotationVector.y = (-this.moveState.yawRight + this.moveState.yawLeft);\n\t\tthis.rotationVector.z = (-this.moveState.rollRight + this.moveState.rollLeft);\n\n\t\t//console.log( 'rotate:', [ this.rotationVector.x, this.rotationVector.y, this.rotationVector.z ] );\n\n\t};\n\n\tthis.getContainerDimensions = function () {\n\n\t\tif (this.domElement != document) {\n\n\t\t\treturn {\n\t\t\t\tsize: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n\t\t\t\toffset: [this.domElement.offsetLeft, this.domElement.offsetTop]\n\t\t\t};\n\n\t\t} else {\n\n\t\t\treturn {\n\t\t\t\tsize: [window.innerWidth, window.innerHeight],\n\t\t\t\toffset: [0, 0]\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\tfunction bind(scope, fn) {\n\n\t\treturn function () {\n\n\t\t\tfn.apply(scope, arguments);\n\n\t\t};\n\n\t};\n\n\tthis.domElement.addEventListener('contextmenu', function (event) {\n\t\tevent.preventDefault();\n\t}, false);\n\n\tthis.domElement.addEventListener('mousemove', bind(this, this.mousemove), false);\n\tthis.domElement.addEventListener('mousedown', bind(this, this.mousedown), false);\n\tthis.domElement.addEventListener('mouseup', bind(this, this.mouseup), false);\n\n\twindow.addEventListener('keydown', bind(this, this.keydown), false);\n\twindow.addEventListener('keyup', bind(this, this.keyup), false);\n\n\tthis.updateMovementVector();\n\tthis.updateRotationVector();\n\n};","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n/*global THREE, console */\n\n// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n// supported.\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n//\n// This is a drop-in replacement for (most) TrackballControls used in examples.\n// That is, include this js file and wherever you see:\n//    \tcontrols = new THREE.TrackballControls( camera );\n//      controls.target.z = 150;\n// Simple substitute \"OrbitControls\" and the control should work as-is.\n\nTHREE.OrbitControls = function (object, domElement) {\n\n\tthis.object = object;\n\tthis.domElement = (domElement !== undefined) ? domElement : document;\n\n\t// API\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the control orbits around\n\t// and where it pans with respect to.\n\tthis.target = new THREE.Vector3();\n\n\t// center is old, deprecated; use \"target\" instead\n\tthis.center = this.target;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t// backwards compatibility\n\tthis.noZoom = false;\n\tthis.zoomSpeed = 1.0;\n\n\t// Limits to how far you can dolly in and out\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// Set to true to disable this control\n\tthis.noRotate = false;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to true to disable this control\n\tthis.noPan = false;\n\tthis.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = -Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to disable use of the keys\n\tthis.noKeys = false;\n\n\t// The four arrow keys\n\tthis.keys = {\n\t\tLEFT: 37,\n\t\tUP: 38,\n\t\tRIGHT: 39,\n\t\tBOTTOM: 40\n\t};\n\n\t// Mouse buttons\n\tthis.mouseButtons = {\n\t\tORBIT: THREE.MOUSE.LEFT,\n\t\tZOOM: THREE.MOUSE.MIDDLE,\n\t\tPAN: THREE.MOUSE.RIGHT\n\t};\n\n\t////////////\n\t// internals\n\n\tvar scope = this;\n\n\tvar EPS = 0.000001;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\tvar panOffset = new THREE.Vector3();\n\n\tvar offset = new THREE.Vector3();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tvar phiDelta = 0;\n\tvar thetaDelta = 0;\n\tvar scale = 1;\n\tvar pan = new THREE.Vector3();\n\n\tvar lastPosition = new THREE.Vector3();\n\tvar lastQuaternion = new THREE.Quaternion();\n\n\tvar STATE = {\n\t\tNONE: -1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_DOLLY: 4,\n\t\tTOUCH_PAN: 5\n\t};\n\n\tvar state = STATE.NONE;\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\n\t// so camera.up is the orbit axis\n\n\tvar quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n\tvar quatInverse = quat.clone().inverse();\n\n\t// events\n\n\tvar changeEvent = {\n\t\ttype: 'change'\n\t};\n\tvar startEvent = {\n\t\ttype: 'start'\n\t};\n\tvar endEvent = {\n\t\ttype: 'end'\n\t};\n\n\tthis.rotateLeft = function (angle) {\n\n\t\tif (angle === undefined) {\n\n\t\t\tangle = getAutoRotationAngle();\n\n\t\t}\n\n\t\tthetaDelta -= angle;\n\n\t};\n\n\tthis.rotateUp = function (angle) {\n\n\t\tif (angle === undefined) {\n\n\t\t\tangle = getAutoRotationAngle();\n\n\t\t}\n\n\t\tphiDelta -= angle;\n\n\t};\n\n\t// pass in distance in world space to move left\n\tthis.panLeft = function (distance) {\n\n\t\tvar te = this.object.matrix.elements;\n\n\t\t// get X column of matrix\n\t\tpanOffset.set(te[0], te[1], te[2]);\n\t\tpanOffset.multiplyScalar(-distance);\n\n\t\tpan.add(panOffset);\n\n\t};\n\n\t// pass in distance in world space to move up\n\tthis.panUp = function (distance) {\n\n\t\tvar te = this.object.matrix.elements;\n\n\t\t// get Y column of matrix\n\t\tpanOffset.set(te[4], te[5], te[6]);\n\t\tpanOffset.multiplyScalar(distance);\n\n\t\tpan.add(panOffset);\n\n\t};\n\n\t// pass in x,y of change desired in pixel space,\n\t// right and down are positive\n\tthis.pan = function (deltaX, deltaY) {\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tif (scope.object.fov !== undefined) {\n\n\t\t\t// perspective\n\t\t\tvar position = scope.object.position;\n\t\t\tvar offset = position.clone().sub(scope.target);\n\t\t\tvar targetDistance = offset.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n\n\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\tscope.panLeft(2 * deltaX * targetDistance / element.clientHeight);\n\t\t\tscope.panUp(2 * deltaY * targetDistance / element.clientHeight);\n\n\t\t} else if (scope.object.top !== undefined) {\n\n\t\t\t// orthographic\n\t\t\tscope.panLeft(deltaX * (scope.object.right - scope.object.left) / element.clientWidth);\n\t\t\tscope.panUp(deltaY * (scope.object.top - scope.object.bottom) / element.clientHeight);\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic or perspective\n\t\t\tconsole.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n\n\t\t}\n\n\t};\n\n\tthis.dollyIn = function (dollyScale) {\n\n\t\tif (dollyScale === undefined) {\n\n\t\t\tdollyScale = getZoomScale();\n\n\t\t}\n\n\t\tscale /= dollyScale;\n\n\t};\n\n\tthis.dollyOut = function (dollyScale) {\n\n\t\tif (dollyScale === undefined) {\n\n\t\t\tdollyScale = getZoomScale();\n\n\t\t}\n\n\t\tscale *= dollyScale;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tvar position = this.object.position;\n\n\t\toffset.copy(position).sub(this.target);\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\toffset.applyQuaternion(quat);\n\n\t\t// angle from z-axis around y-axis\n\n\t\tvar theta = Math.atan2(offset.x, offset.z);\n\n\t\t// angle from y-axis\n\n\t\tvar phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n\n\t\tif (this.autoRotate) {\n\n\t\t\tthis.rotateLeft(getAutoRotationAngle());\n\n\t\t}\n\n\t\ttheta += thetaDelta;\n\t\tphi += phiDelta;\n\n\t\t// restrict theta to be between desired limits\n\t\ttheta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta));\n\n\t\t// restrict phi to be between desired limits\n\t\tphi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tphi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n\n\t\tvar radius = offset.length() * scale;\n\n\t\t// restrict radius to be between desired limits\n\t\tradius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n\t\t// move target to panned location\n\t\tthis.target.add(pan);\n\n\t\toffset.x = radius * Math.sin(phi) * Math.sin(theta);\n\t\toffset.y = radius * Math.cos(phi);\n\t\toffset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\toffset.applyQuaternion(quatInverse);\n\n\t\tposition.copy(this.target).add(offset);\n\n\t\tthis.object.lookAt(this.target);\n\n\t\tthetaDelta = 0;\n\t\tphiDelta = 0;\n\t\tscale = 1;\n\t\tpan.set(0, 0, 0);\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif (lastPosition.distanceToSquared(this.object.position) > EPS || 8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n\t\t\tthis.dispatchEvent(changeEvent);\n\n\t\t\tlastPosition.copy(this.object.position);\n\t\t\tlastQuaternion.copy(this.object.quaternion);\n\n\t\t}\n\n\t};\n\n\n\tthis.reset = function () {\n\n\t\tstate = STATE.NONE;\n\n\t\tthis.target.copy(this.target0);\n\t\tthis.object.position.copy(this.position0);\n\n\t\tthis.update();\n\n\t};\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow(0.95, scope.zoomSpeed);\n\n\t}\n\n\tfunction onMouseDown(event) {\n\n\t\tif (scope.enabled === false) return;\n\t\tevent.preventDefault();\n\n\t\tif (event.button === scope.mouseButtons.ORBIT) {\n\t\t\tif (scope.noRotate === true) return;\n\n\t\t\tstate = STATE.ROTATE;\n\n\t\t\trotateStart.set(event.clientX, event.clientY);\n\n\t\t} else if (event.button === scope.mouseButtons.ZOOM) {\n\t\t\tif (scope.noZoom === true) return;\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t\tdollyStart.set(event.clientX, event.clientY);\n\n\t\t} else if (event.button === scope.mouseButtons.PAN) {\n\t\t\tif (scope.noPan === true) return;\n\n\t\t\tstate = STATE.PAN;\n\n\t\t\tpanStart.set(event.clientX, event.clientY);\n\n\t\t}\n\n\t\tdocument.addEventListener('mousemove', onMouseMove, false);\n\t\tdocument.addEventListener('mouseup', onMouseUp, false);\n\t\tscope.dispatchEvent(startEvent);\n\n\t}\n\n\tfunction onMouseMove(event) {\n\n\t\tif (scope.enabled === false) return;\n\n\t\tevent.preventDefault();\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tif (state === STATE.ROTATE) {\n\n\t\t\tif (scope.noRotate === true) return;\n\n\t\t\trotateEnd.set(event.clientX, event.clientY);\n\t\t\trotateDelta.subVectors(rotateEnd, rotateStart);\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\tscope.rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\tscope.rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n\t\t\trotateStart.copy(rotateEnd);\n\n\t\t} else if (state === STATE.DOLLY) {\n\n\t\t\tif (scope.noZoom === true) return;\n\n\t\t\tdollyEnd.set(event.clientX, event.clientY);\n\t\t\tdollyDelta.subVectors(dollyEnd, dollyStart);\n\n\t\t\tif (dollyDelta.y > 0) {\n\n\t\t\t\tscope.dollyIn();\n\n\t\t\t} else {\n\n\t\t\t\tscope.dollyOut();\n\n\t\t\t}\n\n\t\t\tdollyStart.copy(dollyEnd);\n\n\t\t} else if (state === STATE.PAN) {\n\n\t\t\tif (scope.noPan === true) return;\n\n\t\t\tpanEnd.set(event.clientX, event.clientY);\n\t\t\tpanDelta.subVectors(panEnd, panStart);\n\n\t\t\tscope.pan(panDelta.x, panDelta.y);\n\n\t\t\tpanStart.copy(panEnd);\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction onMouseUp( /* event */ ) {\n\n\t\tif (scope.enabled === false) return;\n\n\t\tdocument.removeEventListener('mousemove', onMouseMove, false);\n\t\tdocument.removeEventListener('mouseup', onMouseUp, false);\n\t\tscope.dispatchEvent(endEvent);\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel(event) {\n\n\t\tif (scope.enabled === false || scope.noZoom === true) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tvar delta = 0;\n\n\t\tif (event.wheelDelta !== undefined) { // WebKit / Opera / Explorer 9\n\n\t\t\tdelta = event.wheelDelta;\n\n\t\t} else if (event.detail !== undefined) { // Firefox\n\n\t\t\tdelta = -event.detail;\n\n\t\t}\n\n\t\tif (delta > 0) {\n\n\t\t\tscope.dollyOut();\n\n\t\t} else {\n\n\t\t\tscope.dollyIn();\n\n\t\t}\n\n\t\tscope.update();\n\t\tscope.dispatchEvent(startEvent);\n\t\tscope.dispatchEvent(endEvent);\n\n\t}\n\n\tfunction onKeyDown(event) {\n\n\t\tif (scope.enabled === false || scope.noKeys === true || scope.noPan === true) return;\n\n\t\tswitch (event.keyCode) {\n\n\t\tcase scope.keys.UP:\n\t\t\tscope.pan(0, scope.keyPanSpeed);\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase scope.keys.BOTTOM:\n\t\t\tscope.pan(0, -scope.keyPanSpeed);\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase scope.keys.LEFT:\n\t\t\tscope.pan(scope.keyPanSpeed, 0);\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase scope.keys.RIGHT:\n\t\t\tscope.pan(-scope.keyPanSpeed, 0);\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction touchstart(event) {\n\n\t\tif (scope.enabled === false) return;\n\n\t\tswitch (event.touches.length) {\n\n\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\tif (scope.noRotate === true) return;\n\n\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\trotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\tbreak;\n\n\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\tif (scope.noZoom === true) return;\n\n\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\t\t\tvar distance = Math.sqrt(dx * dx + dy * dy);\n\t\t\tdollyStart.set(0, distance);\n\t\t\tbreak;\n\n\t\tcase 3: // three-fingered touch: pan\n\n\t\t\tif (scope.noPan === true) return;\n\n\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\tpanStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tscope.dispatchEvent(startEvent);\n\n\t}\n\n\tfunction touchmove(event) {\n\n\t\tif (scope.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tswitch (event.touches.length) {\n\n\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\tif (scope.noRotate === true) return;\n\t\t\tif (state !== STATE.TOUCH_ROTATE) return;\n\n\t\t\trotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\trotateDelta.subVectors(rotateEnd, rotateStart);\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\tscope.rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\tscope.rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n\t\t\trotateStart.copy(rotateEnd);\n\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\tif (scope.noZoom === true) return;\n\t\t\tif (state !== STATE.TOUCH_DOLLY) return;\n\n\t\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\t\t\tvar distance = Math.sqrt(dx * dx + dy * dy);\n\n\t\t\tdollyEnd.set(0, distance);\n\t\t\tdollyDelta.subVectors(dollyEnd, dollyStart);\n\n\t\t\tif (dollyDelta.y > 0) {\n\n\t\t\t\tscope.dollyOut();\n\n\t\t\t} else {\n\n\t\t\t\tscope.dollyIn();\n\n\t\t\t}\n\n\t\t\tdollyStart.copy(dollyEnd);\n\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase 3: // three-fingered touch: pan\n\n\t\t\tif (scope.noPan === true) return;\n\t\t\tif (state !== STATE.TOUCH_PAN) return;\n\n\t\t\tpanEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\tpanDelta.subVectors(panEnd, panStart);\n\n\t\t\tscope.pan(panDelta.x, panDelta.y);\n\n\t\t\tpanStart.copy(panEnd);\n\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( /* event */ ) {\n\n\t\tif (scope.enabled === false) return;\n\n\t\tscope.dispatchEvent(endEvent);\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tthis.domElement.addEventListener('contextmenu', function (event) {\n\t\tevent.preventDefault();\n\t}, false);\n\tthis.domElement.addEventListener('mousedown', onMouseDown, false);\n\tthis.domElement.addEventListener('mousewheel', onMouseWheel, false);\n\tthis.domElement.addEventListener('DOMMouseScroll', onMouseWheel, false); // firefox\n\n\tthis.domElement.addEventListener('touchstart', touchstart, false);\n\tthis.domElement.addEventListener('touchend', touchend, false);\n\tthis.domElement.addEventListener('touchmove', touchmove, false);\n\n\twindow.addEventListener('keydown', onKeyDown, false);\n\n\t// force an update at start\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);","var Sphere = (function(){\n\n    function Sphere(){\n        THREE.Object3D.call(this);\n\n        var geometry = new THREE.SphereGeometry(35);\n        var material = new THREE.MeshBasicMaterial({color: 0x3facc8, wireframe: true});\n        this.mesh = new THREE.Mesh(geometry, material);\n        this.add(this.mesh);\n    }\n\n    Sphere.prototype = new THREE.Object3D;\n    Sphere.prototype.constructor = Sphere;\n\n    Sphere.prototype.update = function() {\n        this.mesh.rotation.y += 0.01;\n    };\n\n    return Sphere;\n})();","ParticleShader = {\n\n\tuniforms: {},\n\n\tvertexShader: [\n\n\t\t\"void main() {\",\n\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"void main() {\",\n\n\t\t\"gl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};"],"sourceRoot":"/source/"}